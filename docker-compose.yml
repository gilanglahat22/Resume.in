services:
  postgres:
    image: pgvector/pgvector:pg14
    container_name: resume-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-resumeuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-resumepassword}
      POSTGRES_DB: ${POSTGRES_DB:-resumedb}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - resume-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resumeuser -d resumedb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resume-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      # Server Configuration
      SERVER_PORT: ${SERVER_PORT:-8080}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      ALLOW_ORIGINS: ${ALLOW_ORIGINS:-"http://localhost:3000,http://localhost:4200"}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      
      # Database Configuration
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-resumeuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-resumepassword}
      POSTGRES_DB: ${POSTGRES_DB:-resumedb}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE:-disable}
      
      # API Configuration
      OPEN_ROUTER_API_KEY: ${OPEN_ROUTER_API_KEY}
      OPEN_ROUTER_MODEL: ${OPEN_ROUTER_MODEL:-anthropic/claude-3-sonnet:beta}
      
      # Authentication Configuration
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URL: ${GOOGLE_REDIRECT_URL:-http://localhost:8080/api/auth/google/callback}
      
      # Frontend Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    networks:
      - resume-network

networks:
  resume-network:
    driver: bridge

volumes:
  postgres-data: 